// <auto-generated />
using System;
using DDD.Infra.SQLServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DDD.Infra.SQLServer.Migrations
{
    [DbContext(typeof(SqlContext))]
    partial class SqlContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence("UserSequence");

            modelBuilder.Entity("DDD.Domain.PosGraduacao.Avaliacao", b =>
                {
                    b.Property<int>("AvaliacaoId")
                        .HasColumnType("int");

                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<int>("ProfessorId")
                        .HasColumnType("int");

                    b.Property<int>("SeqCursoId")
                        .HasColumnType("int");

                    b.Property<int>("DisciplinaId")
                        .HasColumnType("int");

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<int>("Etapa")
                        .HasColumnType("int");

                    b.Property<string>("AvaliacaoName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Nota")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("AvaliacaoId", "AlunoId", "ProfessorId", "SeqCursoId", "DisciplinaId", "Ano", "Etapa");

                    b.HasIndex("AlunoId");

                    b.HasIndex("DisciplinaId");

                    b.HasIndex("ProfessorId");

                    b.HasIndex("SeqCursoId");

                    b.ToTable("Avaliacoes");
                });

            modelBuilder.Entity("DDD.Domain.PosGraduacao.Curso", b =>
                {
                    b.Property<int>("CursoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CursoId"));

                    b.Property<bool>("Disponivel")
                        .HasColumnType("bit");

                    b.Property<bool>("Ead")
                        .HasColumnType("bit");

                    b.Property<decimal>("Mensalidade")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NomeCurso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CursoId");

                    b.ToTable("Cursos");
                });

            modelBuilder.Entity("DDD.Domain.PosGraduacao.Disciplina", b =>
                {
                    b.Property<int>("DisciplinaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DisciplinaId"));

                    b.Property<int>("CargaHoraria")
                        .HasColumnType("int");

                    b.Property<bool>("Disponivel")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DisciplinaId");

                    b.ToTable("Disciplinas");
                });

            modelBuilder.Entity("DDD.Domain.PosGraduacao.Grade", b =>
                {
                    b.Property<int>("SeqCursoId")
                        .HasColumnType("int");

                    b.Property<int>("DisciplinaId")
                        .HasColumnType("int");

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<int>("Etapa")
                        .HasColumnType("int");

                    b.HasKey("SeqCursoId", "DisciplinaId", "Ano", "Etapa");

                    b.HasIndex("DisciplinaId");

                    b.ToTable("Grade");
                });

            modelBuilder.Entity("DDD.Domain.PosGraduacao.Matricula", b =>
                {
                    b.Property<int>("SeqCursoId")
                        .HasColumnType("int");

                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<int>("MatriculaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataMatricula")
                        .HasColumnType("datetime2");

                    b.Property<int>("SituacaoMatriculaId")
                        .HasColumnType("int");

                    b.HasKey("SeqCursoId", "AlunoId", "MatriculaId");

                    b.HasIndex("AlunoId");

                    b.HasIndex("SituacaoMatriculaId");

                    b.ToTable("Matriculas");
                });

            modelBuilder.Entity("DDD.Domain.PosGraduacao.Projeto", b =>
                {
                    b.Property<int>("ProjetoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjetoId"));

                    b.Property<int>("AnosDuracao")
                        .HasColumnType("int");

                    b.Property<int?>("PesquisadorUserId")
                        .HasColumnType("int");

                    b.Property<string>("ProjetoDescricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjetoName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjetoId");

                    b.HasIndex("PesquisadorUserId");

                    b.ToTable("Projetos");
                });

            modelBuilder.Entity("DDD.Domain.PosGraduacao.PublicacaoCientifica", b =>
                {
                    b.Property<int>("PublicacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PublicacaoId"));

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DataPublicacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjetoId")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PublicacaoId");

                    b.HasIndex("ProjetoId");

                    b.ToTable("PublicacoesCientificas");
                });

            modelBuilder.Entity("DDD.Domain.PosGraduacao.SeqCurso", b =>
                {
                    b.Property<int>("SeqCursoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeqCursoId"));

                    b.Property<int>("CursoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicial")
                        .HasColumnType("datetime2");

                    b.HasKey("SeqCursoId");

                    b.HasIndex("CursoId");

                    b.ToTable("SeqCurso");
                });

            modelBuilder.Entity("DDD.Domain.PosGraduacao.SituacaoMatricula", b =>
                {
                    b.Property<int>("SituacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SituacaoId"));

                    b.Property<string>("NomeSituacao")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("SituacaoId");

                    b.ToTable("SituacaoMatricula");
                });

            modelBuilder.Entity("DDD.Domain.UserManagementContext.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR [UserSequence]");

                    SqlServerPropertyBuilderExtensions.UseSequence(b.Property<int>("UserId"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("Cpf")
                        .IsUnique();

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("DDD.Domain.PosGraduacao.Aluno", b =>
                {
                    b.HasBaseType("DDD.Domain.UserManagementContext.User");

                    b.ToTable("Aluno", (string)null);
                });

            modelBuilder.Entity("DDD.Domain.PosGraduacao.Pesquisador", b =>
                {
                    b.HasBaseType("DDD.Domain.UserManagementContext.User");

                    b.Property<string>("Titulacao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("Pesquisador", (string)null);
                });

            modelBuilder.Entity("DDD.Domain.PosGraduacaoContext.Professor", b =>
                {
                    b.HasBaseType("DDD.Domain.UserManagementContext.User");

                    b.Property<string>("Titulacao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("Professores");
                });

            modelBuilder.Entity("DDD.Domain.PosGraduacao.Avaliacao", b =>
                {
                    b.HasOne("DDD.Domain.PosGraduacao.Aluno", "Aluno")
                        .WithMany()
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DDD.Domain.PosGraduacao.Disciplina", "Disciplina")
                        .WithMany()
                        .HasForeignKey("DisciplinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DDD.Domain.PosGraduacaoContext.Professor", "Professor")
                        .WithMany()
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DDD.Domain.PosGraduacao.SeqCurso", "SeqCurso")
                        .WithMany()
                        .HasForeignKey("SeqCursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Disciplina");

                    b.Navigation("Professor");

                    b.Navigation("SeqCurso");
                });

            modelBuilder.Entity("DDD.Domain.PosGraduacao.Grade", b =>
                {
                    b.HasOne("DDD.Domain.PosGraduacao.Disciplina", "Disciplina")
                        .WithMany("Grade")
                        .HasForeignKey("DisciplinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DDD.Domain.PosGraduacao.SeqCurso", "SeqCurso")
                        .WithMany()
                        .HasForeignKey("SeqCursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Disciplina");

                    b.Navigation("SeqCurso");
                });

            modelBuilder.Entity("DDD.Domain.PosGraduacao.Matricula", b =>
                {
                    b.HasOne("DDD.Domain.PosGraduacao.Aluno", "Aluno")
                        .WithMany()
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DDD.Domain.PosGraduacao.SeqCurso", "SeqCurso")
                        .WithMany()
                        .HasForeignKey("SeqCursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DDD.Domain.PosGraduacao.SituacaoMatricula", "SituacaoMatricula")
                        .WithMany()
                        .HasForeignKey("SituacaoMatriculaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("SeqCurso");

                    b.Navigation("SituacaoMatricula");
                });

            modelBuilder.Entity("DDD.Domain.PosGraduacao.Projeto", b =>
                {
                    b.HasOne("DDD.Domain.PosGraduacao.Pesquisador", null)
                        .WithMany("Projetos")
                        .HasForeignKey("PesquisadorUserId");
                });

            modelBuilder.Entity("DDD.Domain.PosGraduacao.PublicacaoCientifica", b =>
                {
                    b.HasOne("DDD.Domain.PosGraduacao.Projeto", "Projeto")
                        .WithMany()
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("DDD.Domain.PosGraduacao.SeqCurso", b =>
                {
                    b.HasOne("DDD.Domain.PosGraduacao.Curso", "Curso")
                        .WithMany("SeqCurso")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("DDD.Domain.PosGraduacao.Curso", b =>
                {
                    b.Navigation("SeqCurso");
                });

            modelBuilder.Entity("DDD.Domain.PosGraduacao.Disciplina", b =>
                {
                    b.Navigation("Grade");
                });

            modelBuilder.Entity("DDD.Domain.PosGraduacao.Pesquisador", b =>
                {
                    b.Navigation("Projetos");
                });
#pragma warning restore 612, 618
        }
    }
}
